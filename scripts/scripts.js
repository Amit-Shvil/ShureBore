"use strict";angular.module("documentsAppInternal",["documentsTranslations","wixAngular","wix.common.bi","ngMaterial","wixStyle"]),angular.module("documentsApp",["documentsAppInternal"]).config(function(){});var Dot=function(){function a(a,b){this.row=a,this.col=b,this.radius=10,this.dotSpace=50,this.boardOffset=15,this.status=!1}return a.prototype.getRow=function(){return this.row},a.prototype.getDotSize=function(){return this.radius},a.prototype.getCol=function(){return this.col},a.prototype.isEmpty=function(){return!this.status},a.prototype.fill=function(){this.status=!0},a.prototype.getXPosition=function(){return this.getCol()*this.dotSpace+this.boardOffset},a.prototype.getYPosition=function(){return this.getRow()*this.dotSpace+this.boardOffset},a.prototype.isInDot=function(a,b){return Math.pow(this.getXPosition()-a,2)+Math.pow(this.getYPosition()-b,2)<=Math.pow(this.radius,2)},a}(),GameApp=function(){function a(a,b){var c=this;this.$scope=a,this.Game=b,this.canvas=document.getElementById("canvas"),this.context=this.canvas.getContext("2d"),this.tmpDots=new Array(2),this.game=new b,this.canvas.addEventListener("click",function(a){return c.onCanvasClick(a)}),this.canvas.addEventListener("mousedown",function(a){return c.onCanvasDown(a)}),this.canvas.addEventListener("mouseup",function(a){return c.onCanvasUp(a)}),this.render()}return a.$inject=["$scope","Game"],a.prototype.onCanvasUp=function(a){var b=this.getSelectedDot(a);if(b&&b!==this.tmpDots[0]&&(this.tmpDots.push(b),2===this.tmpDots.length)){var c=new Line(this.tmpDots[0],this.tmpDots[1]);this.game.drawLine(c),this.render()}},a.prototype.render=function(){this.drawBoard()},a.prototype.onCanvasDown=function(a){var b=this.getSelectedDot(a);this.tmpDots=[],b&&this.tmpDots.push(b)},a.prototype.getSelectedDot=function(a){for(var b=a.pageX-this.canvas.offsetLeft,c=a.pageY-this.canvas.offsetTop,d=0;d<this.game.getBoard().model.length;d++)for(var e=0;e<this.game.getBoard().model[d].length;e++){var f=this.game.getBoard().model[d][e];if(f.isInDot(b,c))return console.log("clicked in:"+d+","+e),f}return null},a.prototype.onCanvasClick=function(a){var b=this;this.$scope.$apply(function(){var c=b.getSelectedDot(a);c&&(b.game.playTurn(c),b.render())})},a.prototype.drawBoard=function(){for(var a=0;a<this.game.getBoard().model.length;a++)for(var b=0;b<this.game.getBoard().model[a].length;b++)this.drawDot(this.game.getBoard().model[a][b]);this.drawLines()},a.prototype.drawLines=function(){var a=this;this.game.players.forEach(function(b){b.lines.forEach(function(c){a.drawLine(c,b.color)})})},a.prototype.drawDot=function(a){this.context.beginPath(),this.context.arc(a.getXPosition(),a.getYPosition(),a.getDotSize(),0,2*Math.PI,!1),this.context.fillStyle=a.isEmpty()?"#ccddff":"#000000",this.context.fill(),this.context.lineWidth=1,this.context.strokeStyle="#666666",this.context.stroke()},a.prototype.canEndTurn=function(){return this.game.canPlayerEndTurn()},a.prototype.endTurn=function(){if(this.game.endTurn(),this.game.isGameOver()){var a=this.game.getWinners()+" won!";alert("'Game Over! "+a)}},a.prototype.drawLine=function(a,b){this.context.beginPath(),this.context.moveTo(a.startDot.getXPosition(),a.startDot.getYPosition()),this.context.lineTo(a.endDot.getXPosition(),a.endDot.getYPosition()),this.context.strokeStyle=b,this.context.stroke()},a}();angular.module("documentsAppInternal").component("gameApp",{template:'\n<header class="header">\n  <div class="player-turn">{{$ctrl.game.getActivePlayer().name}}\'s turn</div>\n  <button type="button" class="wix-button end-turn-btn" ng-disabled="!$ctrl.canEndTurn()" ng-click="$ctrl.endTurn()">End Turn</button>\n</header>\n<canvas id="canvas" width="300" height="300" />\n<score-table players="$ctrl.game.players"></score-table>\n',controller:GameApp,bindings:{name:"="}});var Board=function(){function a(a){this.boardSize=a,this.initBoard(a)}return a.prototype.initBoard=function(a){this.model=new Array(a);for(var b=0;a>b;b++){this.model[b]=new Array(b+1);for(var c=0;b>=c;c++)this.model[b][c]=new Dot(b,c)}},a.prototype.isFull=function(){for(var a=!0,b=0;b<this.model.length;b++)for(var c=0;c<this.model[b].length;c++)a=a&&!this.model[b][c].isEmpty();return a},a.prototype.isLegalLine=function(a){return a.length<2?!1:a.isVertical()?this.boardSize-a.startDot.getCol()===a.length:a.isHorizontal()?this.model[a.startDot.getRow()].length===a.length:void 0},a}(),Player=function(){function a(a,b){this.name=a,this.score=0,this.lines=[],this.color=b}return a.prototype.getScore=function(){var a=0;return this.lines.forEach(function(b){a+=b.length}),a},a.prototype.hasLine=function(a){var b=!1;return this.lines.forEach(function(c){b=c.isEqual(a)||b}),b},a}(),Line=function(){function a(a,b){this.startDot=a,this.endDot=b,this.length=this.calcLength()}return a.prototype.calcLength=function(){return this.startDot.getCol()===this.endDot.getCol()?Math.abs(this.startDot.getRow()-this.endDot.getRow())+1:this.startDot.getRow()===this.endDot.getRow()?Math.abs(this.startDot.getCol()-this.endDot.getCol())+1:void 0},a.prototype.isEqual=function(a){return this.startDot===a.startDot&&this.endDot===a.endDot||this.startDot===a.endDot&&this.endDot===a.startDot},a.prototype.isVertical=function(){return this.startDot.getCol()===this.endDot.getCol()},a.prototype.isHorizontal=function(){return this.startDot.getRow()===this.endDot.getRow()},a}(),Game=function(){function a(){this.players=new Array(2),this.players[0]=new Player("Player 1","#ff0000"),this.players[1]=new Player("Player 2","#0000ff"),this.activePlayer=0,this.isOver=!1,this.board=new Board(5),this.turn={dot:void 0,lines:void 0}}return a.prototype.isGameOver=function(){return this.board.isFull()},a.prototype.getBoard=function(){return this.board},a.prototype.getWinners=function(){var a=-1;return this.players.forEach(function(b){b.getScore()>a&&(a=b.getScore())}),this.players.filter(function(b){return b.getScore()===a}).map(function(a){return a.name})},a.prototype.playTurn=function(a){this.canPlaceDot(a)&&(this.turn.dot=a,a.fill())},a.prototype.canPlaceDot=function(a){return a.isEmpty()&&!this.turn.dot},a.prototype.canPlayerEndTurn=function(){return!!this.turn.dot},a.prototype.endTurn=function(){this.turn={dot:void 0,lines:void 0},this.activePlayer=(this.activePlayer+1)%this.players.length},a.prototype.getActivePlayer=function(){return this.players[this.activePlayer]},a.prototype.canDrawLine=function(a){var b=!0;if(this.board.isLegalLine(a))for(var c=0;c<this.players.length;c++)this.players[c].hasLine(a)&&(b=!1);else b=!1;return b},a.prototype.drawLine=function(a){this.canDrawLine(a)&&this.players[this.activePlayer].lines.push(a)},a}();angular.module("documentsAppInternal").factory("Game",["$injector",function(a){return function(){var b=Object.create(Game.prototype);return a.invoke(b.inject||angular.noop,b),Game.apply(b,arguments),b}}]);var ScoreTable=function(){function a(){}return a}();angular.module("documentsAppInternal").component("scoreTable",{template:'\n<section class="score-table">\n  <div class="score-table-title">Score Table:</div>\n  <div class="player-entry" ng-repeat="player in $ctrl.players">\n    <div class="player-name">{{player.name}}</div>\n    <div class="player-score">{{player.getScore()}}</div>\n  </div>\n</section>\n    ',controller:ScoreTable,bindings:{players:"="}});